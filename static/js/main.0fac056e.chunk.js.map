{"version":3,"sources":["Book.js","Album.js","Podcast.js","Movie.js","VideoGame.js","index.js"],"names":["BookRoster","count","roster","getRoster","addToRoster","title","year","author","pageNum","isComplete","console","log","book","BookFactory","push","deleteFromRoster","find","i","length","id","splice","AlbumRoster","artist","genre","album","AlbumFactory","PodcastRoster","date","host","podcast","PodcastFactory","MovieRoster","director","movie","MovieFactory","GameRoster","pub","game","GameFactory","MediaTable","props","handleDelete","bind","handleAddClick","handler","state","addingNew","this","setState","map","addRow","entry","key","obj","deletehandler","col0","col1","col2","col3","col4","tableLabel","label","tableHeaders","headers","header","handleSwitch","onClick","React","Component","MediaForm","handleChange","handleCheck","submitForm","field0","field1","field2","field3","index","len","className","type","onChange","event","changed","target","value","checked","alert","preventDefault","onSubmit","renderField","MediaRow","setComplete","deleteRow","CATEGORIES","Library","info","category","renderTable","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0fac056e.chunk.js","sourcesContent":["/*\n    { label: 'Books', headers: ['Title', 'Year Published', 'Author', 'No. of Pages', 'Completed'] },\n    { label: 'Music', headers: ['Title', 'Year Released', 'Artist', 'Album', 'Genre'] },\n    { label: 'Podcasts', headers: ['Title', 'Date', 'Host', 'Genre', 'Completed'] },\n    { label: 'Movies', headers: ['Title', 'Year Released', 'Director', 'Genre', 'Completed'] },\n    { label: 'Video Games', headers: ['Title', 'Year Published', 'Publisher', 'Genre', 'Completed'] },\n*/\n\nconst BookRoster = (()=> {\n \n    var count = 0;\n    var roster = [];\n\n    const getRoster = () => {return roster};\n\n    const addToRoster = (title, year, author, pageNum, isComplete) => {\n        console.log('title: ' + title + ' author: ' + author);\n        var book = BookFactory(title, year, author, pageNum, isComplete, count++);\n        roster.push(book);\n\tconsole.log('roster after push: ' + roster);\n    }\n\n    const deleteFromRoster = (find) => {\n        console.log('deleting book: ' + find);\n        for (var i = 0; i < roster.length; i++) {\n            if (roster[i].id === find) {\n                roster.splice(i,1);\n\t    }\n\t}\n    }\n\n    return {getRoster, addToRoster, deleteFromRoster};\n})();\n\nconst BookFactory = (title, year, author, pageNum, isComplete, id) => {\n    \n    return {title, year, author, pageNum, isComplete, id};\n}\n\nexport {BookRoster};\n","//{ label: 'Music', headers: ['Title', 'Year Released', 'Artist', 'Album', 'Genre'] },\n\nconst AlbumRoster = (()=> {\n\n    var count = 0;\n    var roster = [];\n\n    const getRoster = () => {return roster};\n\n    const addToRoster = (title, year, artist, genre, isComplete) => {\n        var album = AlbumFactory(title, year, artist, genre, isComplete, count++);\n        roster.push(album);\n    }\n\n    const deleteFromRoster = (find) => {\n        console.log('deleting album: ' + find);\n        for (var i = 0; i < roster.length; i++) {\n            if (roster[i].id === find) {\n                roster.splice(i,1);\n            }\n        }\n    }\n\n    return {getRoster, addToRoster, deleteFromRoster};\n})();\n\nconst AlbumFactory = (title, year, artist, genre, isComplete, id) => {\n\n    return {title, year, artist, genre, isComplete, id};\n}\n\nexport {AlbumRoster};\n\n","const PodcastRoster = (()=> {\n\n    var count = 0;\n    var roster = [];\n\n    const getRoster = () => {return roster};\n\n    const addToRoster = (title, date, host, genre, isComplete) => {\n        var podcast = PodcastFactory(title, date, host, genre, isComplete, count++);\n        roster.push(podcast);\n    }\n\n    const deleteFromRoster = (find) => {\n        for (var i = 0; i < roster.length; i++) {\n            if (roster[i].id === find) {\n                roster.splice(i,1);\n            }\n        }\n    }\n\n    return {getRoster, addToRoster, deleteFromRoster};\n})();\n\nconst PodcastFactory = (title, date, host, genre, isComplete, id) => {\n\n    return {title, date, host, genre, isComplete, id};\n}\n\nexport {PodcastRoster};\n\n","const MovieRoster = (()=> {\n\n    var count = 0;\n    var roster = [];\n\n    const getRoster = () => {return roster};\n\n    const addToRoster = (title, year, director, genre, isComplete) => {\n        var movie = MovieFactory(title, year, director, genre, isComplete, count++);\n        roster.push(movie);\n    }\n\n    const deleteFromRoster = (find) => {\n        for (var i = 0; i < roster.length; i++) {\n            if (roster[i].id === find) {\n                roster.splice(i,1);\n            }\n        }\n    }\n\n    return {getRoster, addToRoster, deleteFromRoster};\n})();\n\nconst MovieFactory = (title, year, director, genre, isComplete, id) => {\n\n    return {title, year, director, genre, isComplete, id};\n}\n\nexport {MovieRoster};\n\n","const GameRoster = (()=> {\n\n    var count = 0;\n    var roster = [];\n\n    const getRoster = () => {return roster};\n\n    const addToRoster = (title, year, pub, genre, isComplete) => {\n        var game = GameFactory(title, year, pub, genre, isComplete, count++);\n        roster.push(game);\n    }\n\n    const deleteFromRoster = (find) => {\n        for (var i = 0; i < roster.length; i++) {\n            if (roster[i].id === find) {\n                roster.splice(i,1);\n            }\n        }\n    }\n\n    return {getRoster, addToRoster, deleteFromRoster};\n})();\n\nconst GameFactory = (title, year, pub, genre, isComplete, id) => {\n\n    return {title, year, pub, genre, isComplete, id};\n}\n\nexport {GameRoster};\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {BookRoster} from './Book.js';\nimport {AlbumRoster} from './Album.js';\nimport {PodcastRoster} from './Podcast.js';\nimport {MovieRoster} from './Movie.js';\nimport {GameRoster} from './VideoGame.js';\n\n\nclass MediaTable extends React.Component {\n   \n    constructor(props) {\n        super(props);\n        this.handleDelete = this.handleDelete.bind(this);\n        this.handleAddClick = this.handleAddClick.bind(this);\n        this.handler = this.handler.bind(this);\n        this.state = {addingNew: false};\n    }\n\n    handleDelete(find) {\n        switch(this.props.id) {\n             case 0:\n             BookRoster.deleteFromRoster(find);\n             break;\n\n             case 1:\n             AlbumRoster.deleteFromRoster(find);\n             break;\n\n             case 2:\n             PodcastRoster.deleteFromRoster(find);\n             break;\n\n             case 3:\n             MovieRoster.deleteFromRoster(find);\n             break;\n\n             case 4:\n             GameRoster.deleteFromRoster(find);\n             break;\n\n             default:\n             break;\n        }\n\n        this.setState({});\n    }\n\n    handleAddClick() {\n         this.setState({addingNew: true});\n    }\n\n    handleSwitch(id) {\n         switch(id) {\n             case 0:\n             var roster = BookRoster.getRoster();\n             return roster.map( book => this.addRow(book));\n             break;\n             \n             case 1:\n             var roster1 = AlbumRoster.getRoster();\n             return roster1.map( album => this.addRow(album));\n             break;\n\n             case 2:\n             var roster2 = PodcastRoster.getRoster();\n             return roster2.map( podcast => this.addRow(podcast));\n             break;\n\n             case 3:\n             var roster3 = MovieRoster.getRoster();\n             return roster3.map( movie => this.addRow(movie));\n             break;\n\n             case 4:\n             var roster4 = GameRoster.getRoster();\n             return roster4.map( game => this.addRow(game));\n             break;\n\n             default:\n             break;\n        }\n    }\n\n    addRow(entry) {\n        return <MediaRow key={entry.title} obj = {entry} handler={this.handler} deletehandler = {this.handleDelete} \n\t    col0={entry.title} col1={entry.year} col2={entry.author} col3={entry.pageNum} col4={entry.isComplete}/>;\n    }\n\n    handler() {\n        this.setState({addingNew: false});\n    }\n\n    render() {\n        const id = this.props.id;\n        const tableLabel = this.props.label;\n        const tableHeaders = this.props.headers;\n        const addingNew = this.state.addingNew;\n        return (\n            <div>\n                <h2>{tableLabel}</h2>\n\t        <table>\n                    <thead>\n\t\t        <tr>\n                            {tableHeaders.map(header => ( \n                                <th key={header}>{header}</th>\n                            ))}\n\t\t            <th></th>\n\t\t        </tr>\n                    </thead>\n\t\t    <tbody>\n                        {this.handleSwitch(id)}\n                    </tbody>\n\t\t</table>\n\t        {!addingNew ? \t\n\t\t    <button onClick={this.handleAddClick}>Add {tableLabel}</button>\n                    :\n                    <MediaForm id={id} handler ={this.handler} headers={tableHeaders}/>\n                }\n           </div>\n\t);\n    }\n}\n\nclass MediaForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleChange = this.handleChange.bind(this);\n\tthis.handleCheck = this.handleCheck.bind(this);\n\tthis.submitForm = this.submitForm.bind(this);\n        this.state = ({id: this.props.id, field0: '', field1: '', field2: '', field3: '', isComplete: false});\n    }\n\n    renderField(header, index, len) {\n\tif (index < len-1) {\n        return (\n            <div className='formField' key={header}>\n                <label>{header}</label>\n                <input type='text' id={index} onChange={this.handleChange}></input>\n            </div>\n        )\n\t}\n    }\n\n    handleChange(event) {\n        const changed = (event.target.id);\n\tthis.setState({ ['field'+changed]: event.target.value });\n    }\n\n    handleCheck(event) {\n        this.setState({isComplete: event.target.checked});\n\talert(event.target.checked);\n    }\n\n    submitForm(event) {\n        const id = this.props.id;\n        switch(id) {\n            case 0:\n                BookRoster.addToRoster(this.state.field0, this.state.field1, this.state.field2, this.state.field3, this.state.isComplete);\n                this.props.handler();\n                break;\n\n            case 1:\n                AlbumRoster.addToRoster(this.state.field0, this.state.field1, this.state.field2, this.state.field3, this.state.isComplete);\n                this.props.handler();\n                break;\n\n\n            case 2:\n                PodcastRoster.addToRoster(this.state.field0, this.state.field1, this.state.field2, this.state.field3, this.state.isComplete);\n                this.props.handler();\n                break;\n\n\n            case 3:\n                MovieRoster.addToRoster(this.state.field0, this.state.field1, this.state.field2, this.state.field3, this.state.isComplete);\n                this.props.handler();\n                break;\n\n\n            case 4:\n                GameRoster.addToRoster(this.state.field0, this.state.field1, this.state.field2, this.state.field3, this.state.isComplete);\n                this.props.handler();\n                break;\n\n            default:\n                break;\n\t}\n        event.preventDefault();\n    }\n\n    render() {\n        const id = this.props.id;\n        const headers = this.props.headers;\n        return (\n            <form onSubmit={this.submitForm}>\n\t\t<button className='close' onClick={this.props.handler}>X</button>\n\t\t{headers.map( (header, index) => this.renderField(header, index, headers.length))}\n\t\t<input type='checkbox' value='complete' onChange={this.handleCheck} checked={this.state.isComplete}></input>\n\t\t<label>Completed</label><br></br>\n\t\t<input type='submit' value='Add'></input>\n            </form>\n\t)\n    }\n}\n\nclass MediaRow extends React.Component {\n\n    constructor (props) {\n        super(props);\n        this.setComplete = this.setComplete.bind(this);\n        this.deleteRow = this.deleteRow.bind(this);\n    }\n\n    setComplete() {\n        this.props.obj.isComplete = !this.props.col4;\n        this.props.handler();\n    }\n\n    deleteRow() {\n        this.props.deletehandler(this.props.obj.id);\n    }\n\n    render() {\n        const obj = this.props.obj;\n        const col0 = this.props.col0;\n        const col1 = this.props.col1;\n        const col2 = this.props.col2;\n        const col3 = this.props.col3;\n        const col4 = this.props.col4;\n        return (\n             <tr>\n                 <td>{col0}</td>\n                 <td>{col1}</td>\n                 <td>{col2}</td>\n                 <td>{col3}</td>\n                 {col4 ? <td onClick={this.setComplete}>Yes</td> : <td onClick={this.setComplete}>No</td>}\n\t         <td className='holdDelete'><button className='delBtn' onClick={this.deleteRow}>Delete</button></td>\n             </tr>\n        );\n    }\n}\n\nconst CATEGORIES = [\n    { id: 0, label: 'Books', headers: ['Title', 'Year Published', 'Author', 'No. of Pages', 'Completed'] },\n    { id: 1, label: 'Albums', headers: ['Title', 'Year Released', 'Artist', 'Genre', 'Completed'] },\n    { id: 2, label: 'Podcasts', headers: ['Title', 'Date', 'Host', 'Genre', 'Completed'] },\n    { id: 3, label: 'Movies', headers: ['Title', 'Year Released', 'Director', 'Genre', 'Completed'] },\n    { id: 4, label: 'Video Games', headers: ['Title', 'Year Published', 'Publisher', 'Genre', 'Completed'] }\n]\n\nclass Library extends React.Component {\n    renderTable(info) {\n        return <MediaTable key={info.id} id={info.id} label={info.label} headers={info.headers}/>;\n    }\n    render() {\n        return (\n          <div>\n\t    { CATEGORIES.map( category => this.renderTable(category) )}\n          </div>\n\t);\n    };\n}\n\n\nReactDOM.render(\n  <Library />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}